//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SRHF.wrECG {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsECGSoap", Namespace="http://tempuri.org/")]
    public partial class wsECG : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetECGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECGByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECGByEMROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECGByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECGByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddECGOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateECGOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteECGOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonthlyNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearlyNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsECG() {
            this.Url = global::SRHF.Properties.Settings.Default.SRHF_wrECG_wsECG;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetECGCompletedEventHandler GetECGCompleted;
        
        /// <remarks/>
        public event GetECGByIDCompletedEventHandler GetECGByIDCompleted;
        
        /// <remarks/>
        public event GetECGByEMRCompletedEventHandler GetECGByEMRCompleted;
        
        /// <remarks/>
        public event GetECGByDateCompletedEventHandler GetECGByDateCompleted;
        
        /// <remarks/>
        public event GetECGByDatesCompletedEventHandler GetECGByDatesCompleted;
        
        /// <remarks/>
        public event AddECGCompletedEventHandler AddECGCompleted;
        
        /// <remarks/>
        public event UpdateECGCompletedEventHandler UpdateECGCompleted;
        
        /// <remarks/>
        public event DeleteECGCompletedEventHandler DeleteECGCompleted;
        
        /// <remarks/>
        public event GetDailyNoCompletedEventHandler GetDailyNoCompleted;
        
        /// <remarks/>
        public event GetMonthlyNoCompletedEventHandler GetMonthlyNoCompleted;
        
        /// <remarks/>
        public event GetYearlyNoCompletedEventHandler GetYearlyNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetECG() {
            object[] results = this.Invoke("GetECG", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetECGAsync() {
            this.GetECGAsync(null);
        }
        
        /// <remarks/>
        public void GetECGAsync(object userState) {
            if ((this.GetECGOperationCompleted == null)) {
                this.GetECGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECGOperationCompleted);
            }
            this.InvokeAsync("GetECG", new object[0], this.GetECGOperationCompleted, userState);
        }
        
        private void OnGetECGOperationCompleted(object arg) {
            if ((this.GetECGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECGCompleted(this, new GetECGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECGByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ECG GetECGByID(int ID) {
            object[] results = this.Invoke("GetECGByID", new object[] {
                        ID});
            return ((ECG)(results[0]));
        }
        
        /// <remarks/>
        public void GetECGByIDAsync(int ID) {
            this.GetECGByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetECGByIDAsync(int ID, object userState) {
            if ((this.GetECGByIDOperationCompleted == null)) {
                this.GetECGByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECGByIDOperationCompleted);
            }
            this.InvokeAsync("GetECGByID", new object[] {
                        ID}, this.GetECGByIDOperationCompleted, userState);
        }
        
        private void OnGetECGByIDOperationCompleted(object arg) {
            if ((this.GetECGByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECGByIDCompleted(this, new GetECGByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECGByEMR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetECGByEMR(string EMRNo) {
            object[] results = this.Invoke("GetECGByEMR", new object[] {
                        EMRNo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetECGByEMRAsync(string EMRNo) {
            this.GetECGByEMRAsync(EMRNo, null);
        }
        
        /// <remarks/>
        public void GetECGByEMRAsync(string EMRNo, object userState) {
            if ((this.GetECGByEMROperationCompleted == null)) {
                this.GetECGByEMROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECGByEMROperationCompleted);
            }
            this.InvokeAsync("GetECGByEMR", new object[] {
                        EMRNo}, this.GetECGByEMROperationCompleted, userState);
        }
        
        private void OnGetECGByEMROperationCompleted(object arg) {
            if ((this.GetECGByEMRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECGByEMRCompleted(this, new GetECGByEMRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECGByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetECGByDate(System.DateTime dt) {
            object[] results = this.Invoke("GetECGByDate", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetECGByDateAsync(System.DateTime dt) {
            this.GetECGByDateAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetECGByDateAsync(System.DateTime dt, object userState) {
            if ((this.GetECGByDateOperationCompleted == null)) {
                this.GetECGByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECGByDateOperationCompleted);
            }
            this.InvokeAsync("GetECGByDate", new object[] {
                        dt}, this.GetECGByDateOperationCompleted, userState);
        }
        
        private void OnGetECGByDateOperationCompleted(object arg) {
            if ((this.GetECGByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECGByDateCompleted(this, new GetECGByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECGByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetECGByDates(System.DateTime df, System.DateTime dt) {
            object[] results = this.Invoke("GetECGByDates", new object[] {
                        df,
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetECGByDatesAsync(System.DateTime df, System.DateTime dt) {
            this.GetECGByDatesAsync(df, dt, null);
        }
        
        /// <remarks/>
        public void GetECGByDatesAsync(System.DateTime df, System.DateTime dt, object userState) {
            if ((this.GetECGByDatesOperationCompleted == null)) {
                this.GetECGByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECGByDatesOperationCompleted);
            }
            this.InvokeAsync("GetECGByDates", new object[] {
                        df,
                        dt}, this.GetECGByDatesOperationCompleted, userState);
        }
        
        private void OnGetECGByDatesOperationCompleted(object arg) {
            if ((this.GetECGByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECGByDatesCompleted(this, new GetECGByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddECG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AddECG(ECG ecg) {
            object[] results = this.Invoke("AddECG", new object[] {
                        ecg});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AddECGAsync(ECG ecg) {
            this.AddECGAsync(ecg, null);
        }
        
        /// <remarks/>
        public void AddECGAsync(ECG ecg, object userState) {
            if ((this.AddECGOperationCompleted == null)) {
                this.AddECGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddECGOperationCompleted);
            }
            this.InvokeAsync("AddECG", new object[] {
                        ecg}, this.AddECGOperationCompleted, userState);
        }
        
        private void OnAddECGOperationCompleted(object arg) {
            if ((this.AddECGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddECGCompleted(this, new AddECGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateECG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client UpdateECG(ECG ecg) {
            object[] results = this.Invoke("UpdateECG", new object[] {
                        ecg});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateECGAsync(ECG ecg) {
            this.UpdateECGAsync(ecg, null);
        }
        
        /// <remarks/>
        public void UpdateECGAsync(ECG ecg, object userState) {
            if ((this.UpdateECGOperationCompleted == null)) {
                this.UpdateECGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateECGOperationCompleted);
            }
            this.InvokeAsync("UpdateECG", new object[] {
                        ecg}, this.UpdateECGOperationCompleted, userState);
        }
        
        private void OnUpdateECGOperationCompleted(object arg) {
            if ((this.UpdateECGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateECGCompleted(this, new UpdateECGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteECG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client DeleteECG(ECG ecg) {
            object[] results = this.Invoke("DeleteECG", new object[] {
                        ecg});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteECGAsync(ECG ecg) {
            this.DeleteECGAsync(ecg, null);
        }
        
        /// <remarks/>
        public void DeleteECGAsync(ECG ecg, object userState) {
            if ((this.DeleteECGOperationCompleted == null)) {
                this.DeleteECGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteECGOperationCompleted);
            }
            this.InvokeAsync("DeleteECG", new object[] {
                        ecg}, this.DeleteECGOperationCompleted, userState);
        }
        
        private void OnDeleteECGOperationCompleted(object arg) {
            if ((this.DeleteECGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteECGCompleted(this, new DeleteECGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetDailyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetDailyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyNoAsync(System.DateTime dt) {
            this.GetDailyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetDailyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetDailyNoOperationCompleted == null)) {
                this.GetDailyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyNoOperationCompleted);
            }
            this.InvokeAsync("GetDailyNo", new object[] {
                        dt}, this.GetDailyNoOperationCompleted, userState);
        }
        
        private void OnGetDailyNoOperationCompleted(object arg) {
            if ((this.GetDailyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyNoCompleted(this, new GetDailyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetMonthlyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetMonthlyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonthlyNoAsync(System.DateTime dt) {
            this.GetMonthlyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetMonthlyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetMonthlyNoOperationCompleted == null)) {
                this.GetMonthlyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonthlyNoOperationCompleted);
            }
            this.InvokeAsync("GetMonthlyNo", new object[] {
                        dt}, this.GetMonthlyNoOperationCompleted, userState);
        }
        
        private void OnGetMonthlyNoOperationCompleted(object arg) {
            if ((this.GetMonthlyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonthlyNoCompleted(this, new GetMonthlyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYearlyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetYearlyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetYearlyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearlyNoAsync(System.DateTime dt) {
            this.GetYearlyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetYearlyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetYearlyNoOperationCompleted == null)) {
                this.GetYearlyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearlyNoOperationCompleted);
            }
            this.InvokeAsync("GetYearlyNo", new object[] {
                        dt}, this.GetYearlyNoOperationCompleted, userState);
        }
        
        private void OnGetYearlyNoOperationCompleted(object arg) {
            if ((this.GetYearlyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearlyNoCompleted(this, new GetYearlyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Server2Client {
        
        private int countField;
        
        private double valueField;
        
        private string messageField;
        
        private bool resultField;
        
        private System.Data.DataTable dtField;
        
        private System.Data.DataSet dsField;
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public double value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                return this.dsField;
            }
            set {
                this.dsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ECG {
        
        private int idField;
        
        private System.DateTime i_DateField;
        
        private int dailyNoField;
        
        private int monthlyNoField;
        
        private string eMRNoField;
        
        private string diagnosisField;
        
        private string receiptNoField;
        
        private string remarksField;
        
        private double chargeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime I_Date {
            get {
                return this.i_DateField;
            }
            set {
                this.i_DateField = value;
            }
        }
        
        /// <remarks/>
        public int DailyNo {
            get {
                return this.dailyNoField;
            }
            set {
                this.dailyNoField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyNo {
            get {
                return this.monthlyNoField;
            }
            set {
                this.monthlyNoField = value;
            }
        }
        
        /// <remarks/>
        public string EMRNo {
            get {
                return this.eMRNoField;
            }
            set {
                this.eMRNoField = value;
            }
        }
        
        /// <remarks/>
        public string Diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                this.diagnosisField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNo {
            get {
                return this.receiptNoField;
            }
            set {
                this.receiptNoField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public double Charge {
            get {
                return this.chargeField;
            }
            set {
                this.chargeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetECGCompletedEventHandler(object sender, GetECGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetECGByIDCompletedEventHandler(object sender, GetECGByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECGByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECGByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ECG Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ECG)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetECGByEMRCompletedEventHandler(object sender, GetECGByEMRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECGByEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECGByEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetECGByDateCompletedEventHandler(object sender, GetECGByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECGByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECGByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetECGByDatesCompletedEventHandler(object sender, GetECGByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECGByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECGByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddECGCompletedEventHandler(object sender, AddECGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddECGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddECGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateECGCompletedEventHandler(object sender, UpdateECGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateECGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateECGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteECGCompletedEventHandler(object sender, DeleteECGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteECGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteECGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDailyNoCompletedEventHandler(object sender, GetDailyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMonthlyNoCompletedEventHandler(object sender, GetMonthlyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonthlyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonthlyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetYearlyNoCompletedEventHandler(object sender, GetYearlyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearlyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearlyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591