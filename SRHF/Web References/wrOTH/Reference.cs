//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SRHF.wrOTH {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsOTHSoap", Namespace="http://tempuri.org/")]
    public partial class wsOTH : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOpTheaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpTheaterByEMROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpTheaterByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpTheaterByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpTheaterByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOpTheaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOpTheaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOpTheaterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnaesthetistAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SurgeonAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssistantAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonthlyNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYearlyNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsOTH() {
            this.Url = global::SRHF.Properties.Settings.Default.SRHF_wrOTH_wsOTH;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOpTheaterCompletedEventHandler GetOpTheaterCompleted;
        
        /// <remarks/>
        public event GetOpTheaterByEMRCompletedEventHandler GetOpTheaterByEMRCompleted;
        
        /// <remarks/>
        public event GetOpTheaterByDateCompletedEventHandler GetOpTheaterByDateCompleted;
        
        /// <remarks/>
        public event GetOpTheaterByDatesCompletedEventHandler GetOpTheaterByDatesCompleted;
        
        /// <remarks/>
        public event GetOpTheaterByIDCompletedEventHandler GetOpTheaterByIDCompleted;
        
        /// <remarks/>
        public event AddOpTheaterCompletedEventHandler AddOpTheaterCompleted;
        
        /// <remarks/>
        public event UpdateOpTheaterCompletedEventHandler UpdateOpTheaterCompleted;
        
        /// <remarks/>
        public event DeleteOpTheaterCompletedEventHandler DeleteOpTheaterCompleted;
        
        /// <remarks/>
        public event AnaesthetistAutoCompleteCompletedEventHandler AnaesthetistAutoCompleteCompleted;
        
        /// <remarks/>
        public event SurgeonAutoCompleteCompletedEventHandler SurgeonAutoCompleteCompleted;
        
        /// <remarks/>
        public event AssistantAutoCompleteCompletedEventHandler AssistantAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetDailyNoCompletedEventHandler GetDailyNoCompleted;
        
        /// <remarks/>
        public event GetMonthlyNoCompletedEventHandler GetMonthlyNoCompleted;
        
        /// <remarks/>
        public event GetYearlyNoCompletedEventHandler GetYearlyNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpTheater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetOpTheater() {
            object[] results = this.Invoke("GetOpTheater", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpTheaterAsync() {
            this.GetOpTheaterAsync(null);
        }
        
        /// <remarks/>
        public void GetOpTheaterAsync(object userState) {
            if ((this.GetOpTheaterOperationCompleted == null)) {
                this.GetOpTheaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpTheaterOperationCompleted);
            }
            this.InvokeAsync("GetOpTheater", new object[0], this.GetOpTheaterOperationCompleted, userState);
        }
        
        private void OnGetOpTheaterOperationCompleted(object arg) {
            if ((this.GetOpTheaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpTheaterCompleted(this, new GetOpTheaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpTheaterByEMR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetOpTheaterByEMR(string EMRNo) {
            object[] results = this.Invoke("GetOpTheaterByEMR", new object[] {
                        EMRNo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpTheaterByEMRAsync(string EMRNo) {
            this.GetOpTheaterByEMRAsync(EMRNo, null);
        }
        
        /// <remarks/>
        public void GetOpTheaterByEMRAsync(string EMRNo, object userState) {
            if ((this.GetOpTheaterByEMROperationCompleted == null)) {
                this.GetOpTheaterByEMROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpTheaterByEMROperationCompleted);
            }
            this.InvokeAsync("GetOpTheaterByEMR", new object[] {
                        EMRNo}, this.GetOpTheaterByEMROperationCompleted, userState);
        }
        
        private void OnGetOpTheaterByEMROperationCompleted(object arg) {
            if ((this.GetOpTheaterByEMRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpTheaterByEMRCompleted(this, new GetOpTheaterByEMRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpTheaterByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetOpTheaterByDate(System.DateTime dt) {
            object[] results = this.Invoke("GetOpTheaterByDate", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpTheaterByDateAsync(System.DateTime dt) {
            this.GetOpTheaterByDateAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetOpTheaterByDateAsync(System.DateTime dt, object userState) {
            if ((this.GetOpTheaterByDateOperationCompleted == null)) {
                this.GetOpTheaterByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpTheaterByDateOperationCompleted);
            }
            this.InvokeAsync("GetOpTheaterByDate", new object[] {
                        dt}, this.GetOpTheaterByDateOperationCompleted, userState);
        }
        
        private void OnGetOpTheaterByDateOperationCompleted(object arg) {
            if ((this.GetOpTheaterByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpTheaterByDateCompleted(this, new GetOpTheaterByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpTheaterByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetOpTheaterByDates(System.DateTime df, System.DateTime dt) {
            object[] results = this.Invoke("GetOpTheaterByDates", new object[] {
                        df,
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpTheaterByDatesAsync(System.DateTime df, System.DateTime dt) {
            this.GetOpTheaterByDatesAsync(df, dt, null);
        }
        
        /// <remarks/>
        public void GetOpTheaterByDatesAsync(System.DateTime df, System.DateTime dt, object userState) {
            if ((this.GetOpTheaterByDatesOperationCompleted == null)) {
                this.GetOpTheaterByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpTheaterByDatesOperationCompleted);
            }
            this.InvokeAsync("GetOpTheaterByDates", new object[] {
                        df,
                        dt}, this.GetOpTheaterByDatesOperationCompleted, userState);
        }
        
        private void OnGetOpTheaterByDatesOperationCompleted(object arg) {
            if ((this.GetOpTheaterByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpTheaterByDatesCompleted(this, new GetOpTheaterByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpTheaterByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OpTheater GetOpTheaterByID(int ID) {
            object[] results = this.Invoke("GetOpTheaterByID", new object[] {
                        ID});
            return ((OpTheater)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpTheaterByIDAsync(int ID) {
            this.GetOpTheaterByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetOpTheaterByIDAsync(int ID, object userState) {
            if ((this.GetOpTheaterByIDOperationCompleted == null)) {
                this.GetOpTheaterByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpTheaterByIDOperationCompleted);
            }
            this.InvokeAsync("GetOpTheaterByID", new object[] {
                        ID}, this.GetOpTheaterByIDOperationCompleted, userState);
        }
        
        private void OnGetOpTheaterByIDOperationCompleted(object arg) {
            if ((this.GetOpTheaterByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpTheaterByIDCompleted(this, new GetOpTheaterByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOpTheater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AddOpTheater(OpTheater op) {
            object[] results = this.Invoke("AddOpTheater", new object[] {
                        op});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AddOpTheaterAsync(OpTheater op) {
            this.AddOpTheaterAsync(op, null);
        }
        
        /// <remarks/>
        public void AddOpTheaterAsync(OpTheater op, object userState) {
            if ((this.AddOpTheaterOperationCompleted == null)) {
                this.AddOpTheaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOpTheaterOperationCompleted);
            }
            this.InvokeAsync("AddOpTheater", new object[] {
                        op}, this.AddOpTheaterOperationCompleted, userState);
        }
        
        private void OnAddOpTheaterOperationCompleted(object arg) {
            if ((this.AddOpTheaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOpTheaterCompleted(this, new AddOpTheaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOpTheater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client UpdateOpTheater(OpTheater op) {
            object[] results = this.Invoke("UpdateOpTheater", new object[] {
                        op});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOpTheaterAsync(OpTheater op) {
            this.UpdateOpTheaterAsync(op, null);
        }
        
        /// <remarks/>
        public void UpdateOpTheaterAsync(OpTheater op, object userState) {
            if ((this.UpdateOpTheaterOperationCompleted == null)) {
                this.UpdateOpTheaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOpTheaterOperationCompleted);
            }
            this.InvokeAsync("UpdateOpTheater", new object[] {
                        op}, this.UpdateOpTheaterOperationCompleted, userState);
        }
        
        private void OnUpdateOpTheaterOperationCompleted(object arg) {
            if ((this.UpdateOpTheaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOpTheaterCompleted(this, new UpdateOpTheaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOpTheater", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client DeleteOpTheater(OpTheater op) {
            object[] results = this.Invoke("DeleteOpTheater", new object[] {
                        op});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOpTheaterAsync(OpTheater op) {
            this.DeleteOpTheaterAsync(op, null);
        }
        
        /// <remarks/>
        public void DeleteOpTheaterAsync(OpTheater op, object userState) {
            if ((this.DeleteOpTheaterOperationCompleted == null)) {
                this.DeleteOpTheaterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOpTheaterOperationCompleted);
            }
            this.InvokeAsync("DeleteOpTheater", new object[] {
                        op}, this.DeleteOpTheaterOperationCompleted, userState);
        }
        
        private void OnDeleteOpTheaterOperationCompleted(object arg) {
            if ((this.DeleteOpTheaterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOpTheaterCompleted(this, new DeleteOpTheaterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AnaesthetistAutoComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AnaesthetistAutoComplete() {
            object[] results = this.Invoke("AnaesthetistAutoComplete", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AnaesthetistAutoCompleteAsync() {
            this.AnaesthetistAutoCompleteAsync(null);
        }
        
        /// <remarks/>
        public void AnaesthetistAutoCompleteAsync(object userState) {
            if ((this.AnaesthetistAutoCompleteOperationCompleted == null)) {
                this.AnaesthetistAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnaesthetistAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("AnaesthetistAutoComplete", new object[0], this.AnaesthetistAutoCompleteOperationCompleted, userState);
        }
        
        private void OnAnaesthetistAutoCompleteOperationCompleted(object arg) {
            if ((this.AnaesthetistAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnaesthetistAutoCompleteCompleted(this, new AnaesthetistAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SurgeonAutoComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client SurgeonAutoComplete() {
            object[] results = this.Invoke("SurgeonAutoComplete", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void SurgeonAutoCompleteAsync() {
            this.SurgeonAutoCompleteAsync(null);
        }
        
        /// <remarks/>
        public void SurgeonAutoCompleteAsync(object userState) {
            if ((this.SurgeonAutoCompleteOperationCompleted == null)) {
                this.SurgeonAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSurgeonAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("SurgeonAutoComplete", new object[0], this.SurgeonAutoCompleteOperationCompleted, userState);
        }
        
        private void OnSurgeonAutoCompleteOperationCompleted(object arg) {
            if ((this.SurgeonAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SurgeonAutoCompleteCompleted(this, new SurgeonAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssistantAutoComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AssistantAutoComplete() {
            object[] results = this.Invoke("AssistantAutoComplete", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AssistantAutoCompleteAsync() {
            this.AssistantAutoCompleteAsync(null);
        }
        
        /// <remarks/>
        public void AssistantAutoCompleteAsync(object userState) {
            if ((this.AssistantAutoCompleteOperationCompleted == null)) {
                this.AssistantAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssistantAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("AssistantAutoComplete", new object[0], this.AssistantAutoCompleteOperationCompleted, userState);
        }
        
        private void OnAssistantAutoCompleteOperationCompleted(object arg) {
            if ((this.AssistantAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssistantAutoCompleteCompleted(this, new AssistantAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetDailyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetDailyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyNoAsync(System.DateTime dt) {
            this.GetDailyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetDailyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetDailyNoOperationCompleted == null)) {
                this.GetDailyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyNoOperationCompleted);
            }
            this.InvokeAsync("GetDailyNo", new object[] {
                        dt}, this.GetDailyNoOperationCompleted, userState);
        }
        
        private void OnGetDailyNoOperationCompleted(object arg) {
            if ((this.GetDailyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyNoCompleted(this, new GetDailyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetMonthlyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetMonthlyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetMonthlyNoAsync(System.DateTime dt) {
            this.GetMonthlyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetMonthlyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetMonthlyNoOperationCompleted == null)) {
                this.GetMonthlyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonthlyNoOperationCompleted);
            }
            this.InvokeAsync("GetMonthlyNo", new object[] {
                        dt}, this.GetMonthlyNoOperationCompleted, userState);
        }
        
        private void OnGetMonthlyNoOperationCompleted(object arg) {
            if ((this.GetMonthlyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonthlyNoCompleted(this, new GetMonthlyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYearlyNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetYearlyNo(System.DateTime dt) {
            object[] results = this.Invoke("GetYearlyNo", new object[] {
                        dt});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetYearlyNoAsync(System.DateTime dt) {
            this.GetYearlyNoAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetYearlyNoAsync(System.DateTime dt, object userState) {
            if ((this.GetYearlyNoOperationCompleted == null)) {
                this.GetYearlyNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYearlyNoOperationCompleted);
            }
            this.InvokeAsync("GetYearlyNo", new object[] {
                        dt}, this.GetYearlyNoOperationCompleted, userState);
        }
        
        private void OnGetYearlyNoOperationCompleted(object arg) {
            if ((this.GetYearlyNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYearlyNoCompleted(this, new GetYearlyNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Server2Client {
        
        private int countField;
        
        private double valueField;
        
        private string messageField;
        
        private bool resultField;
        
        private System.Data.DataTable dtField;
        
        private System.Data.DataSet dsField;
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public double value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                return this.dsField;
            }
            set {
                this.dsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OpTheater {
        
        private int idField;
        
        private System.DateTime i_DateField;
        
        private int dailyNoField;
        
        private int monthlyNoField;
        
        private int yearlyNoField;
        
        private string eMRNoField;
        
        private string opNameField;
        
        private string patientTypeField;
        
        private int anaesthesiaField;
        
        private string opTypeField;
        
        private string anaesthetistField;
        
        private string surgeonField;
        
        private string assistantField;
        
        private string remarksField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime I_Date {
            get {
                return this.i_DateField;
            }
            set {
                this.i_DateField = value;
            }
        }
        
        /// <remarks/>
        public int DailyNo {
            get {
                return this.dailyNoField;
            }
            set {
                this.dailyNoField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyNo {
            get {
                return this.monthlyNoField;
            }
            set {
                this.monthlyNoField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyNo {
            get {
                return this.yearlyNoField;
            }
            set {
                this.yearlyNoField = value;
            }
        }
        
        /// <remarks/>
        public string EMRNo {
            get {
                return this.eMRNoField;
            }
            set {
                this.eMRNoField = value;
            }
        }
        
        /// <remarks/>
        public string OpName {
            get {
                return this.opNameField;
            }
            set {
                this.opNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Anaesthesia {
            get {
                return this.anaesthesiaField;
            }
            set {
                this.anaesthesiaField = value;
            }
        }
        
        /// <remarks/>
        public string OpType {
            get {
                return this.opTypeField;
            }
            set {
                this.opTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Anaesthetist {
            get {
                return this.anaesthetistField;
            }
            set {
                this.anaesthetistField = value;
            }
        }
        
        /// <remarks/>
        public string Surgeon {
            get {
                return this.surgeonField;
            }
            set {
                this.surgeonField = value;
            }
        }
        
        /// <remarks/>
        public string Assistant {
            get {
                return this.assistantField;
            }
            set {
                this.assistantField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOpTheaterCompletedEventHandler(object sender, GetOpTheaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpTheaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpTheaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOpTheaterByEMRCompletedEventHandler(object sender, GetOpTheaterByEMRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpTheaterByEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpTheaterByEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOpTheaterByDateCompletedEventHandler(object sender, GetOpTheaterByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpTheaterByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpTheaterByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOpTheaterByDatesCompletedEventHandler(object sender, GetOpTheaterByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpTheaterByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpTheaterByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOpTheaterByIDCompletedEventHandler(object sender, GetOpTheaterByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpTheaterByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpTheaterByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OpTheater Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OpTheater)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOpTheaterCompletedEventHandler(object sender, AddOpTheaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOpTheaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOpTheaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOpTheaterCompletedEventHandler(object sender, UpdateOpTheaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOpTheaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOpTheaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteOpTheaterCompletedEventHandler(object sender, DeleteOpTheaterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOpTheaterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOpTheaterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AnaesthetistAutoCompleteCompletedEventHandler(object sender, AnaesthetistAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnaesthetistAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnaesthetistAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SurgeonAutoCompleteCompletedEventHandler(object sender, SurgeonAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SurgeonAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SurgeonAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AssistantAutoCompleteCompletedEventHandler(object sender, AssistantAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssistantAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssistantAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDailyNoCompletedEventHandler(object sender, GetDailyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetMonthlyNoCompletedEventHandler(object sender, GetMonthlyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonthlyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonthlyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetYearlyNoCompletedEventHandler(object sender, GetYearlyNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYearlyNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYearlyNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591