//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SRHF.wrPatient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsPatientSoap", Namespace="http://tempuri.org/")]
    public partial class wsPatient : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientByEMROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePatientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsPatient() {
            this.Url = global::SRHF.Properties.Settings.Default.SRHF_wrPatient_wsPatient;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPatientsCompletedEventHandler GetPatientsCompleted;
        
        /// <remarks/>
        public event GetPatientByIDCompletedEventHandler GetPatientByIDCompleted;
        
        /// <remarks/>
        public event GetPatientByEMRCompletedEventHandler GetPatientByEMRCompleted;
        
        /// <remarks/>
        public event GetAddressAutoCompleteCompletedEventHandler GetAddressAutoCompleteCompleted;
        
        /// <remarks/>
        public event AddPatientCompletedEventHandler AddPatientCompleted;
        
        /// <remarks/>
        public event UpdatePatientCompletedEventHandler UpdatePatientCompleted;
        
        /// <remarks/>
        public event DeletePatientCompletedEventHandler DeletePatientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetPatients() {
            object[] results = this.Invoke("GetPatients", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsAsync() {
            this.GetPatientsAsync(null);
        }
        
        /// <remarks/>
        public void GetPatientsAsync(object userState) {
            if ((this.GetPatientsOperationCompleted == null)) {
                this.GetPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsOperationCompleted);
            }
            this.InvokeAsync("GetPatients", new object[0], this.GetPatientsOperationCompleted, userState);
        }
        
        private void OnGetPatientsOperationCompleted(object arg) {
            if ((this.GetPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsCompleted(this, new GetPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientByID(int ID) {
            object[] results = this.Invoke("GetPatientByID", new object[] {
                        ID});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientByIDAsync(int ID) {
            this.GetPatientByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetPatientByIDAsync(int ID, object userState) {
            if ((this.GetPatientByIDOperationCompleted == null)) {
                this.GetPatientByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientByIDOperationCompleted);
            }
            this.InvokeAsync("GetPatientByID", new object[] {
                        ID}, this.GetPatientByIDOperationCompleted, userState);
        }
        
        private void OnGetPatientByIDOperationCompleted(object arg) {
            if ((this.GetPatientByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientByIDCompleted(this, new GetPatientByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientByEMR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientByEMR(string EMR) {
            object[] results = this.Invoke("GetPatientByEMR", new object[] {
                        EMR});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientByEMRAsync(string EMR) {
            this.GetPatientByEMRAsync(EMR, null);
        }
        
        /// <remarks/>
        public void GetPatientByEMRAsync(string EMR, object userState) {
            if ((this.GetPatientByEMROperationCompleted == null)) {
                this.GetPatientByEMROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientByEMROperationCompleted);
            }
            this.InvokeAsync("GetPatientByEMR", new object[] {
                        EMR}, this.GetPatientByEMROperationCompleted, userState);
        }
        
        private void OnGetPatientByEMROperationCompleted(object arg) {
            if ((this.GetPatientByEMRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientByEMRCompleted(this, new GetPatientByEMRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddressAutoComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client GetAddressAutoComplete() {
            object[] results = this.Invoke("GetAddressAutoComplete", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressAutoCompleteAsync() {
            this.GetAddressAutoCompleteAsync(null);
        }
        
        /// <remarks/>
        public void GetAddressAutoCompleteAsync(object userState) {
            if ((this.GetAddressAutoCompleteOperationCompleted == null)) {
                this.GetAddressAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("GetAddressAutoComplete", new object[0], this.GetAddressAutoCompleteOperationCompleted, userState);
        }
        
        private void OnGetAddressAutoCompleteOperationCompleted(object arg) {
            if ((this.GetAddressAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressAutoCompleteCompleted(this, new GetAddressAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AddPatient(Patient p) {
            object[] results = this.Invoke("AddPatient", new object[] {
                        p});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AddPatientAsync(Patient p) {
            this.AddPatientAsync(p, null);
        }
        
        /// <remarks/>
        public void AddPatientAsync(Patient p, object userState) {
            if ((this.AddPatientOperationCompleted == null)) {
                this.AddPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPatientOperationCompleted);
            }
            this.InvokeAsync("AddPatient", new object[] {
                        p}, this.AddPatientOperationCompleted, userState);
        }
        
        private void OnAddPatientOperationCompleted(object arg) {
            if ((this.AddPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPatientCompleted(this, new AddPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client UpdatePatient(Patient p) {
            object[] results = this.Invoke("UpdatePatient", new object[] {
                        p});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(Patient p) {
            this.UpdatePatientAsync(p, null);
        }
        
        /// <remarks/>
        public void UpdatePatientAsync(Patient p, object userState) {
            if ((this.UpdatePatientOperationCompleted == null)) {
                this.UpdatePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientOperationCompleted);
            }
            this.InvokeAsync("UpdatePatient", new object[] {
                        p}, this.UpdatePatientOperationCompleted, userState);
        }
        
        private void OnUpdatePatientOperationCompleted(object arg) {
            if ((this.UpdatePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientCompleted(this, new UpdatePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePatient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client DeletePatient(Patient p) {
            object[] results = this.Invoke("DeletePatient", new object[] {
                        p});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePatientAsync(Patient p) {
            this.DeletePatientAsync(p, null);
        }
        
        /// <remarks/>
        public void DeletePatientAsync(Patient p, object userState) {
            if ((this.DeletePatientOperationCompleted == null)) {
                this.DeletePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePatientOperationCompleted);
            }
            this.InvokeAsync("DeletePatient", new object[] {
                        p}, this.DeletePatientOperationCompleted, userState);
        }
        
        private void OnDeletePatientOperationCompleted(object arg) {
            if ((this.DeletePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePatientCompleted(this, new DeletePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Server2Client {
        
        private int countField;
        
        private double valueField;
        
        private string messageField;
        
        private bool resultField;
        
        private System.Data.DataTable dtField;
        
        private System.Data.DataSet dsField;
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public double value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                return this.dtField;
            }
            set {
                this.dtField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                return this.dsField;
            }
            set {
                this.dsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Patient {
        
        private int idField;
        
        private string eMRNoField;
        
        private string pNameField;
        
        private string addressField;
        
        private string sexField;
        
        private int ageField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string EMRNo {
            get {
                return this.eMRNoField;
            }
            set {
                this.eMRNoField = value;
            }
        }
        
        /// <remarks/>
        public string PName {
            get {
                return this.pNameField;
            }
            set {
                this.pNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public int Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPatientsCompletedEventHandler(object sender, GetPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPatientByIDCompletedEventHandler(object sender, GetPatientByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetPatientByEMRCompletedEventHandler(object sender, GetPatientByEMRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientByEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientByEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetAddressAutoCompleteCompletedEventHandler(object sender, GetAddressAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddPatientCompletedEventHandler(object sender, AddPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdatePatientCompletedEventHandler(object sender, UpdatePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeletePatientCompletedEventHandler(object sender, DeletePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591